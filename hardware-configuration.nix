# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "md_mod"
    "raid0"
    "btrfs"
    "xhci_pci"
    "ahci"
    "usbhid"
    "usb_storage"
    "sd_mod"
    "sdhci_pci"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

    fileSystems."/" =
    { device = "/dev/disk/by-uuid/4e865d23-9d02-4f8c-bf68-5b84fc9de046";
      fsType = "btrfs";
      options = [ "subvol=@" "compress=zstd"  ];
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/4e865d23-9d02-4f8c-bf68-5b84fc9de046";
      fsType = "btrfs";
      options = [ "subvol=@home" "compress=zstd"  ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/4e865d23-9d02-4f8c-bf68-5b84fc9de046";
      fsType = "btrfs";
      options = [ "subvol=@nix" "compress=zstd"  ];
    };

  fileSystems."/data" =
    { device = "/dev/disk/by-uuid/4e865d23-9d02-4f8c-bf68-5b84fc9de046";
      fsType = "btrfs";
      options = [ "subvol=@nixarr" "compress=zstd"  ];
    };

  fileSystems."/boot" = 
  {
    device = "/dev/disk/by-uuid/6DA6-F853";
    fsType = "vfat";
    options = [ "fmask=0022" "dmask=0022" ];
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode =
    lib.mkDefault config.hardware.enableRedistributableFirmware;
  boot.swraid.enable = true;
 

  # Enable periodic scrubbing of Btrfs filesystems
  services.btrfs.autoScrub.enable = true;

  # nvidia
  hardware.graphics = {
    enable = true;
    enable32Bit = true;
  };

  services.xserver.videoDrivers = [ "nvidia" ];

  hardware.nvidia = lib.mkDefault {
    prime = {
      sync.enable = true;
      # offload = {
      #   enable = true;
      #   enableOffloadCmd = true;
      # };
      nvidiaBusId = "PCI:1:0:0";
      amdgpuBusId = "PCI:7:0:0";
    };

    modesetting.enable = true;

    powerManagement.enable = true;

    open = false;
    nvidiaSettings = false; # gui app
    package = config.boot.kernelPackages.nvidiaPackages.latest;
  };

  specialisation = {
    on-the-go.configuration = {

      system.nixos.tags = [ "on-the-go" ];

      hardware.nvidia = lib.mkForce {
        prime.offload.enable = true;
        prime.offload.enableOffloadCmd =  true;
        prime.sync.enable =  false;

        powerManagement = {
          enable = true;
          finegrained = true;
        };

      };

    };
  };
}
